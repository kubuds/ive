function(build_test FNAME)
  add_executable(${FNAME} ${FNAME}.c)
  target_link_libraries(${FNAME} cvi_ive_tpu -lm)
  if(ENABLE_SYSTRACE)
  set_target_properties(${FNAME} PROPERTIES LINK_FLAGS "-L ${TRACER_LIB_DIR}")
  endif()
  install(TARGETS ${FNAME} DESTINATION bin)
endfunction()

project(test-c)
include_directories(
    ${MLIR_INCLUDES}
    ${MIDDLEWARE_INCLUDES}
    ${CMAKE_SOURCE_DIR}/3rdparty
    ${CMAKE_SOURCE_DIR}/include
)

build_test(test_add_c)
build_test(test_and_c)
build_test(test_block_c)
build_test(test_copy_c)
build_test(test_copy2_c)
build_test(test_cmp_c)
build_test(test_cviimg_c)
build_test(test_hog_c)
build_test(test_island_c)
build_test(test_morph_c)
build_test(test_mulsum_c)
build_test(test_norm_grad_c)
build_test(test_filter_c)
build_test(test_or_c)
build_test(test_read_c)
build_test(test_sad_c)
build_test(test_sad_stereo_c)
build_test(test_sigmoid_c)
build_test(test_sobel_grad_c)
build_test(test_table_c)
build_test(test_threshold_c)
build_test(test_thresholds16_c)
build_test(test_thresholdu16_c)
build_test(test_xor_c)
# FIXME: Rearrange in alphabet order.
build_test(test_hog_batch_c)
build_test(test_16bitTo8bit_c)
build_test(test_histogram_c)
build_test(test_histEq_c)
build_test(test_integral_image_c)
build_test(test_ncc_c)
build_test(test_lbp_c)
build_test(test_resize_c)
build_test(test_csc_c)
build_test(test_filter_csc_c)
build_test(test_blend_s8_c)
build_test(test_blend_u8_ab_c)
build_test(test_s8_cmp_c)
